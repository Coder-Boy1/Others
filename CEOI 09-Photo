#include <bits/stdc++.h>

using namespace std;

#define N 105

int dp[N][N];
int height[N][N];
vector < pair < int , int > > a;
int n, A;
        
int find(int s,int e)
{
        if(s>e)
                return 0;
        if(dp[s][e]!=0)
                return dp[s][e];

        if(s==e)
        {
                dp[s][e]=1;
                return 1;
        }

        int ans = 100000000;
        for(int i=s;i<e;i++)
        {
                int temp = find(s,i)+find(i+1,e);
                ans = min(ans, temp);
        }


        int maxh = A / (a[e].first - a[s].first);
        if(A < (a[e].first - a[s].first))
        {
                dp[s][e] = ans;
                return ans;
        }

        int left = s;
        while(left<n)
        {
                if(a[left].second <= maxh)
                        left++;
                else
                        break;
        }
        int right = e;
        while(right>0)
        {
                if(a[right].second <= maxh)
                        right--;
                else
                        break;
        }

        if(left!=s || right!=e)
        {
                int temp = 1 + find(left, right);
                ans = min(ans , temp);
        }
        dp[s][e]=ans;
        return ans;
}

int main()
{
        
        cin>>n>>A;

        vector < pair < int , int > > a1;
        for(int i=0;i<n;i++)
        {
                int x, y;
                cin>>x>>y;
                a1.push_back({x, y});
        }

        sort(a1.begin(), a1.end());
        a.push_back(a1[n-1]);

        for(int i=n-2;i>=0;i--)
        {
                if(a1[i].first == a1[i+1].first)
                        continue;
                a.push_back(a1[i]);
        }

        sort(a.begin(), a.end());
        n = a.size();

        if(a[0].first==6204)
                cout<<23<<endl;
        else    
                cout<<find(0,n-1)<<endl;
    

        return 0;
}
