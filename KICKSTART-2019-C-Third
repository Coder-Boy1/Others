#include <bits/stdc++.h>

using namespace std;

#define int long long

int pos[50000], col[50000];
vector < int > a[1005];
int dp[1005][1005][2];

void foo()
{
        for(int i=1;i<=1000;i++)
        {
                a[i].clear();
        }

        for(int i=0;i<=1000;i++)
        {
                for(int j=0;j<=1000;j++)
                {
                        for(int k=0;k<2;k++)
                        {
                                dp[i][j][k]=1000000000000;
                        }
                }
        }
}

int32_t main()
{
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);

        int t;
        cin>>t;

        for(int tt=1;tt<=t;tt++)
        {
                foo();
                int n, needed;
                cin>>n>>needed;

                for(int i=1;i<=n;i++)
                {
                        cin>>pos[i];
                }
                for(int i=1;i<=n;i++)
                {
                        cin>>col[i];
                        a[col[i]].push_back(pos[i]);
                }

                for(int i=1;i<=1000;i++)
                {
                        sort(a[i].begin(), a[i].end());
                }

                dp[0][0][0]=0;
                dp[0][0][1]=0;

                int ans=1000000000000;

                for(int i=1;i<=1000;i++)
                {
                        for(int j=1;j<=1000;j++)
                        {
                                int s=a[i].size();
                                for(int k=1;k<=min(s,j);k++)
                                {

                                        int x=(a[i][k-1]*2)+dp[i-1][j-k][0];
                                        dp[i][j][0]=min(dp[i][j][0],x);

                                        x=a[i][k-1]+dp[i-1][j-k][0];
                                        dp[i][j][1]=min(dp[i][j][1], x);

                                        x=a[i][k-1]*2 + dp[i-1][j-k][1];
                                        dp[i][j][1]=min(dp[i][j][1],x);

                                        if(j==needed)
                                        {
                                                ans=min(ans,dp[i][j][1]);
                                        }
                                }
                        }  

                        for(int j=0;j<=1000;j++)
                        {
                                dp[i][j][0]=min(dp[i][j][0], dp[i-1][j][0]);
                                dp[i][j][1]=min(dp[i][j][1], dp[i-1][j][1]);
                        }        
                }
                cout<<"Case"<<" "<<"#"<<tt<<":"<<" ";
                cout<<ans<<endl;
        }
        
        return 0;
}
