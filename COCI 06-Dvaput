#include <bits/stdc++.h>

using namespace std;

#define N 200005
#define int long long
#define ll long long 

#define MOD 1000000007 
#define MOD2 1000000009
#define prime 31
#define prime2 37

ll P[N],PI[N];
ll P2[N], PI2[N];


ll modInverse(ll a,ll m)
{
        ll m0 = m;
        ll y = 0, x = 1;
        if(m == 1)
                return 0;
        while (a > 1)
        {
                int q = a / m;
                int t = m;
                m = a % m, a = t;
                t = y;
                y = x - q * y;
                x = t;
        }
        if (x < 0)
                x += m0;
        return x;
}

void fun()
{
        P[0]=1;
        int i;
        for(i=1;i<N;i++)
        {
                P[i]=(P[i-1]*prime)%MOD;
        }
        for(i=0;i<N;i++)
        {
                PI[i]=modInverse(P[i],MOD);
        }

        P2[0]=1;
        for(i=1;i<N;i++)
        {
                P2[i]=(P2[i-1]*prime2)%MOD2;
        }
        for(i=0;i<N;i++)
        {
                PI2[i]=modInverse(P2[i],MOD2);
        }
}


int pre[N];
int pre2[N];
string s;
int n;

int check(int p)
{
        vector < pair < int , int > > me;

        for(int i=p-1;i<n;i++)
        {
                int cur = pre[i];
                int cur2 = pre2[i];
                if(i!=p-1)
                {
                        cur-= pre[i-p];
                        cur=(cur*PI[i-p+1])%MOD;
                        //cur%=MOD;
                
                        cur2-= pre2[i-p];
                        cur2=(cur2*PI2[i-p+1])%MOD2;
                        //cur2%=MOD2;
                
                }
                if(cur<0)
                        cur+=MOD;

                if(cur2<0)
                        cur2+=MOD2;
                
                me.push_back({cur, cur2});
              //  me[{cur, cur2}]++;
        }

        sort(me.begin(), me.end());
        
        for(int i=1;i<me.size();i++)
        {
                if(me[i]==me[i-1])
                        return 1;
        }
   
        return 0;
}

int32_t main()
{
        ios_base::sync_with_stdio(false);    cin.tie(NULL);

        fun();
        cin>>n;
        cin>>s;

        pre[0] = s[0]-'a'+1;
        pre2[0] = s[0]-'a'+1;
        for(int i=1;i<n;i++)
        {
                pre[i] = pre[i-1] + (s[i]-'a'+1)*P[i];
                pre[i]%=MOD;
                pre2[i] = pre2[i-1] + (s[i]-'a'+1)*P2[i];
                pre2[i]%=MOD2;
        
        }

        int ans = 0;

        int l=1, r=n;
        while(l<=r)
        {       
                int mid = (l+r)/2;
        
                if(check(mid))
                {
                        ans = mid;
                        l = mid + 1;
                }
                else
                {
                        r = mid - 1;
                }
        }
        cout<<ans<<endl;
        return 0;
}
